[{"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\index.js":"1","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\App.js":"3","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\MultiStepHandler.js":"4","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteInflowOutflow\\SiteDrawingLayout.js":"5","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\FileUploadFinal\\Imageloader.js":"6","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteSelection\\SiteSelectionMap.js":"7","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteSelection\\SiteSelectionForm.js":"8","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\Login\\login.component.js":"9","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\Disclaimer\\disclaimer.component.js":"10","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardSelect\\HazardPage.js":"11","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\PDFDownloadPage\\pdf.js":"12","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteInflowOutflow\\ToolBar.js":"13","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteInflowOutflow\\Canvas.js":"14","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardSelect\\HazardList.js":"15","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardSelect\\HazardListSelected.js":"16","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardSelect\\Hazard.js":"17","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardSelect\\HazardSelected.js":"18","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteInflowOutflow\\DrawContainer.js":"19","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteInflowOutflow\\Board.js":"20","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteInflowOutflow\\TestTest.js":"21","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardAllocation\\Canvas.js":"22","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\GuideDownload\\GuideDownload.js":"23","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardAllocation\\HazardDrop.js":"24"},{"size":489,"mtime":1612476800428,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1612476732025,"results":"27","hashOfConfig":"26"},{"size":792,"mtime":1613006072903,"results":"28","hashOfConfig":"26"},{"size":8701,"mtime":1613032632773,"results":"29","hashOfConfig":"26"},{"size":1411,"mtime":1612910187086,"results":"30","hashOfConfig":"26"},{"size":2614,"mtime":1613041091670,"results":"31","hashOfConfig":"26"},{"size":1523,"mtime":1613040636831,"results":"32","hashOfConfig":"26"},{"size":2328,"mtime":1613007522265,"results":"33","hashOfConfig":"26"},{"size":3304,"mtime":1613006072939,"results":"34","hashOfConfig":"26"},{"size":1540,"mtime":1613006338199,"results":"35","hashOfConfig":"26"},{"size":6428,"mtime":1613040895769,"results":"36","hashOfConfig":"26"},{"size":2045,"mtime":1613041404846,"results":"37","hashOfConfig":"26"},{"size":365,"mtime":1612476800419,"results":"38","hashOfConfig":"26"},{"size":1609,"mtime":1612910187086,"results":"39","hashOfConfig":"26"},{"size":340,"mtime":1612476800398,"results":"40","hashOfConfig":"26"},{"size":402,"mtime":1613034903897,"results":"41","hashOfConfig":"26"},{"size":354,"mtime":1612857897596,"results":"42","hashOfConfig":"26"},{"size":686,"mtime":1613035543108,"results":"43","hashOfConfig":"26"},{"size":1641,"mtime":1613040976158,"results":"44","hashOfConfig":"26"},{"size":13433,"mtime":1613041300720,"results":"45","hashOfConfig":"26"},{"size":205,"mtime":1612836361831,"results":"46","hashOfConfig":"26"},{"size":24797,"mtime":1613010504448,"results":"47","hashOfConfig":"26"},{"size":1940,"mtime":1613040756312,"results":"48","hashOfConfig":"26"},{"size":2676,"mtime":1613040948287,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"79tm06",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\index.js",[],["106","107"],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\App.js",["108","109","110"],"import React from 'react';\nimport './App.css';\nimport logo from './logo.png';\nimport MultiStepHandler from './MultiStepHandler';\nimport {BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\n// App.css holds a basic grid-template layout which is a 2x3 grid, like the following:\n// ' header header '\n// ' main main '\n// ' footer footer'\nexport default function App () {\n\n  return (  <Router>\n\n <body>\n <div className=\"header\">\n   <h1 style={{color:'white', fontWeight: \"bold\", marginLeft: \"55px\", marginTop: \"10px\", marginBottom: '10px'}}>Site Mate</h1>\n   <pre className=\"Subtitle\"> Hoki ora mai     Come Home Safely</pre>\n </div>\n <div className=\"main\"><MultiStepHandler/></div> \n <div className=\"footer\"></div>\n </body>\n <Switch>\n\n          </Switch>\n\n </Router>\n  );\n}\n\n","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\MultiStepHandler.js",["111","112","113","114"],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteInflowOutflow\\SiteDrawingLayout.js",["115","116","117"],"import SiteImg from '../HazardAllocation/Site.JPG';\nimport React, { useRef, useEffect, useState } from 'react'\nimport Canvas from './Canvas';\nimport ToolBar from './ToolBar'\n\n\nfunction SiteDrawingLayout(props) {\n\n    const [colour, setColour] = useState(\"red\");\n    const [size, setSize] = useState(5);\n\n    //'Continue' event handler, calls the nextStep method from MultiStepHandler to go forward a page\n    const continuee = e => {\n        e.preventDefault();\n        props.nextStep();\n    }\n    //'back' event handler, calls the prevStep method from MultiStepHandler to go back a page\n    const back = e => {\n        e.preventDefault();\n        props.prevStep();\n    }\n\n    function toggleColour() {\n        if (colour === \"red\") {\n            setColour(\"green\")\n        } else {\n            setColour(\"red\")\n        }\n    }\n\n    function increase() {\n        setSize(prev => prev + 1)\n    }\n\n    function decrease() {\n        if (size === 1) {\n            return\n        }\n        setSize(prev => prev - 1)\n    }\n\n    return (\n        <div className=\"site-draw-container\">\n            <Canvas colour={colour} size={size} />\n            <ToolBar toggleColour={toggleColour} decrease={decrease} increase={increase} />\n\n            <input className='buttonStyle' type='button' value=\"Back\" onClick={back} />\n            <input className='buttonStyle' type='button' value=\"Submit\" onClick={continuee} />\n        </div>\n    );\n}\n\nexport default SiteDrawingLayout;","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\FileUploadFinal\\Imageloader.js",[],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteSelection\\SiteSelectionMap.js",["118","119","120","121","122","123","124","125"],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteSelection\\SiteSelectionForm.js",["126"],"import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\n/* global google */\n \nexport class SiteSelectionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.autocompleteInput = React.createRef();\n    this.autocomplete = null;\n  }\n \n  \n  //'Continue' event handler, calls the nextStep method from MultiStepHandler to go forward a page\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n}\n//'back' event handler, calls the prevStep method from MultiStepHandler to go back a page\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  }\n  handleChange = input => e => {\n    this.setState({[input]: e.target.value})\n}\n \n  componentDidMount() {\n    this.autocomplete = new google.maps.places.Autocomplete(this.autocompleteInput.current,\n        {\"types\": [\"geocode\"]});\n \n    this.autocomplete.addListener('place_changed', this.handlePlaceChanged);\n  }\n \n \n    render() {\n        return (\n            <form>\n \n            <h3>Fill Out Your Site Details Here.</h3>\n \n            <div className=\"form-group\">\n                <label>Enter Industry</label>\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter Industry\" />\n            </div>\n \n            <div className=\"form-group\">\n              <label>Enter Site Address</label>\n            <input ref={this.autocompleteInput} className=\"form-control\" id=\"autocomplete\" placeholder=\"Enter your Address\"\n         type=\"text\"></input>\n            </div>\n \n            <div className=\"form-group\">\n                <label>Enter Square Meters</label>\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter Sqm\" />\n            </div>\n \n            <div className=\"form-group\">\n                <label>Enter Warehouse</label>\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter Warehouse\" />\n            </div>\n            <input type='button'className= 'buttonStyle'  value=\"Back\" onClick={this.back} />\n              <input type='button'className= 'buttonStyle' value=\"Continue\" onClick={this.continue} />\n            </form>\n        \n          \n        );\n    }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBojPgUo6oL-v-WuwF62T2AGR-KrxVQgvE'\n})(SiteSelectionForm);","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\Login\\login.component.js",["127","128","129","130","131","132"],"import { StylesProvider } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport SiteSelection from '../SiteSelection/SiteSelection';\nimport { Button } from 'react-bootstrap';\nimport Logo from '../logo.png';\nimport '../App.css';\n\n\n\nexport default class Login extends Component {\n\n\n    //make a 'continue' action handler, where the state prop is altered through the nextStep method in the 'MultiStepHandler' component. call this 'continue' handler on the submit button on page.\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    render() {\n        const { values, handleChange } = this.props;\n        return (\n            <Grid container spacing={3}>\n\n                <Grid item xs={6} className=\"logoSide\">\n                    <img alt=\"Logo\" className=\"Logo\" style={{margin: '50px', width:'450px', height:'340px'}} src={Logo} />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <div className=\"loginForm\">\n                        <form style={{ borderRadius: '50px', padding: '30px' }}>\n\n                            <h1>Welcome | Nau Mai</h1>\n\n                            <div>\n                                <input className=\"form-control\" type=\"email\" onChange={handleChange('email')} defaultValue={values.email} placeholder=\"Enter email\" />\n                            </div>\n\n                            <div>\n                                <input className=\"form-control\" style={{ color: 'black' }} type=\"password\" placeholder=\"Enter password\" />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <div>\n                                    <input className=\"form-control\" type=\"checkbox\" id=\"customCheck1\" />\n                                    <label style={{ color: \"black\" }} htmlFor=\"customCheck1\">Remember me</label>\n                                </div>\n                            </div>\n\n                            <input className='buttonStyle' type='button' value=\"Login\" onClick={this.continue} />\n\n                            <p style={{ padding: '10px', fontSize: '15px' }}>\n\n                                Forgot <a href=\"#\">password?</a>\n                            </p>\n\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        );\n    }\n} \n","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\Disclaimer\\disclaimer.component.js",["133","134","135","136"],"\nimport React, { Component } from \"react\";\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport { Checkbox } from '@material-ui/core';\n\n\nexport default class Login extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  }\n  //'back' event handler, calls the prevStep method from MultiStepHandler to go back a page\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  }\n  render() {\n    const { values, handleChange } = this.props;\n    return (\n      <div >\n        <h1 >Disclaimer | Whakakahoretanga </h1>\n        <p className=\"disclaimerParagraph\">The Commissioner is not liable for any damages arising in contract, tort or otherwise from the use of or inability to use this site or any material contained in it, or from any action or decision taken as a result of using the site.\n\n        The materials on this site comprise the Information Commissioner's views; they do not constitute legal or other professional advice. You should consult your professional adviser for legal or other advice.\n\nThis site offers links to other sites thereby enabling you to leave this site and go directly to the linked site. The Information Commissioner is not responsible for the content of any linked site or any link in a linked site. The Commissioner is not responsible for any transmission received from any linked site. The links are provided to assist visitors to the Information Commissioner's site and the inclusion of a link does not imply that the Information Commissioner endorses or has approved the linked site.</p>\n        <input className='buttonStyle' type='button' value=\"Back\" onClick={this.back} />\n        <input className='buttonStyle' type='button' value=\"Agree\" onClick={this.continue} />\n\n        <h6>By clicking 'Agree' you agree to TMP New Zealands Disclaimer</h6>\n\n\n      </div>\n    );\n  }\n}\n","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardSelect\\HazardPage.js",["137","138"],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\PDFDownloadPage\\pdf.js",[],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteInflowOutflow\\ToolBar.js",[],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteInflowOutflow\\Canvas.js",["139"],"import SiteImg from '../HazardAllocation/Site.JPG';\nimport React, { useRef, useEffect, useState } from 'react'\n\nfunction Canvas(props) {\n\n    const canvasRef = useRef(null);\n    const contextRef = useRef(null);\n    const [isDrawing, setIsDrawing] = useState(false);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = window.innerWidth * 2;\n        canvas.height = window.innerHeight * 2;\n        canvas.style.width = `${window.innerWidth}px`;\n        canvas.style.height = `${window.innerHeight}px`;\n\n        const context = canvas.getContext(\"2d\");\n        context.scale(2, 2);\n        //context.globalAlpha = 0.01;\n        context.lineCap = (\"round\");\n        context.strokeStyle = props.colour;\n        context.lineWidth = 5;\n        contextRef.current = context;\n\n    }, [props.colour])\n\n    const startDrawing = ({ nativeEvent }) => {\n        const { offsetX, offsetY } = nativeEvent;\n        contextRef.current.beginPath();\n        contextRef.current.moveTo(offsetX, offsetY);\n        setIsDrawing(true);\n    }\n\n    const finishDrawing = () => {\n        contextRef.current.closePath();\n        setIsDrawing(false);\n    }\n\n    const draw = ({ nativeEvent }) => {\n        if (!isDrawing) {\n            return\n        }\n        const { offsetX, offsetY } = nativeEvent;\n        contextRef.current.lineTo(offsetX, offsetY);\n        contextRef.current.stroke();\n    }\n\n    return (\n        <canvas\n            className=\"inflow-outflow-canvas\"\n            onMouseDown={startDrawing}\n            onMouseUp={finishDrawing}\n            onMouseMove={draw}\n            ref={canvasRef}\n        />\n    );\n}\n\nexport default Canvas","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardSelect\\HazardList.js",[],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardSelect\\HazardListSelected.js",[],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardSelect\\Hazard.js",[],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardSelect\\HazardSelected.js",[],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteInflowOutflow\\DrawContainer.js",[],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteInflowOutflow\\Board.js",["140","141"],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\SiteInflowOutflow\\TestTest.js",[],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardAllocation\\Canvas.js",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159"],"import React, { Component, createRef, useCallback, useState, useRef, useEffect } from \"react\";\nimport { Stage, Layer, Rect, Text, Ellipse, Image, Transformer } from \"react-konva\";\nimport Konva from \"konva\";\nimport useImage from 'use-image';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass URLImage extends React.Component {\n  state = {\n    image: null\n  };\n  componentDidMount() {\n    this.loadImage();\n  }\n  componentDidUpdate(oldProps) {\n    if (oldProps.src !== this.props.src) {\n      this.loadImage();\n    }\n  }\n  componentWillUnmount() {\n    this.image.removeEventListener('load', this.handleLoad);\n  }\n  loadImage() {\n    // save to \"this\" to remove \"load\" handler on unmount\n    this.image = new window.Image();\n    this.image.src = 'images/SitePlan.jpg';\n    this.image.addEventListener('load', this.handleLoad);\n  }\n  handleLoad = () => {\n    // after setState react-konva will update canvas and redraw the layer\n    // because \"image\" property is changed\n    this.setState({\n      image: this.image\n    });\n    // if you keep same image object during source updates\n    // you will have to update layer manually:\n    // this.imageNode.getLayer().batchDraw();\n  };\n  render() {\n    return (\n      <Image\n        x={this.props.x}\n        y={this.props.y}\n        width={this.props.width}\n        height={this.props.height}\n        image={this.state.image}\n        ref={node => {\n          this.imageNode = node;\n        }}\n        onClick={this.props.onClick}\n      />\n    );\n  }\n}\n\n\nconst STANDARD_FORKLIFT_DRAG = (\n  e, idx, ImagePosition, setImagePosition,\n  userHazards, setUserHazards, draggableRef) => {\n\n  setImagePosition({\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n  });\n\n  var imag = draggableRef.current;\n  imag.position({\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n  });\n\n  let userHazardsUpdate = {\n    ...userHazards,\n    forklifts: userHazards.forklifts.map((eachImage, currentIdx) => {\n      if (currentIdx !== idx) {\n        return eachImage;\n      }\n      return {\n        x: e.target._lastPos.x,\n        y: e.target._lastPos.y,\n        width: 35,\n        height: 35,\n        idx: uuidv4()\n      }\n    })\n  }\n  setUserHazards(userHazardsUpdate);\n}\n\nconst TOOLBAR_FORKLIFT_DRAG = (\n  e, idx, imagePosition, setImagePosition,\n  userHazards, setUserHazards, draggableRef) => {\n\n  setImagePosition({\n    x: imagePosition.x,\n    y: imagePosition.y\n  });\n\n  var imag = draggableRef.current;\n  imag.position({\n    x: imagePosition.x,\n    y: imagePosition.y\n  });\n\n  let newImag = {\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n    width: 35,\n    height: 35,\n    idx: uuidv4()\n  }\n\n  let userHazardsUpdate = {\n    ...userHazards,\n    forklifts: [...userHazards.forklifts, newImag]\n  }\n\n  setUserHazards(userHazardsUpdate);\n}\n\nconst STANDARD_TRUCK_DRAG = (\n  e, idx, ImagePosition, setImagePosition,\n  userHazards, setUserHazards, draggableRef) => {\n\n  setImagePosition({\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n  });\n\n  var imag = draggableRef.current;\n  imag.position({\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n  });\n\n  let userHazardsUpdate = {\n    ...userHazards,\n    trucks: userHazards.trucks.map((eachImage, currentIdx) => {\n      if (currentIdx !== idx) {\n        return eachImage;\n      }\n      return {\n        x: e.target._lastPos.x,\n        y: e.target._lastPos.y,\n        width: 35,\n        height: 35,\n        idx: uuidv4()\n      }\n    })\n  }\n  setUserHazards(userHazardsUpdate);\n}\n\nconst TOOLBAR_TRUCK_DRAG = (\n  e, idx, imagePosition, setImagePosition,\n  userHazards, setUserHazards, draggableRef) => {\n\n  setImagePosition({\n    x: imagePosition.x,\n    y: imagePosition.y\n  });\n\n  var imag = draggableRef.current;\n  imag.position({\n    x: imagePosition.x,\n    y: imagePosition.y\n  });\n\n  let newImag = {\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n    width: 35,\n    height: 35,\n    idx: uuidv4()\n  }\n\n  let userHazardsUpdate = {\n    ...userHazards,\n    trucks: [...userHazards.trucks, newImag]\n  }\n\n  setUserHazards(userHazardsUpdate);\n}\n\n\n// const STANDARD_RECTANGLE_DELETE = (\n//   e, idx, eachRect, userHazards, setUserHazards) => {\n//   console.log('Delete idx: ', idx);\n\n//   // update the user hazards\n//   let userHazardsUpdate = {\n//     ...userHazards,\n\n//     // loop through all the rectangles\n//     rectangles: userHazards.rectangles.filter(rectangle => {\n//       // if the rectangle ID is not equal to the idx which was clicked, return\n//       return rectangle.idx !== idx;\n//     })\n//   }\n\n//   console.log('Pre-delete update: ', userHazardsUpdate)\n//   setUserHazards(userHazardsUpdate);\n// }\n\nconst STANDARD_CONE_DRAG = (\n  e, idx, ImagePosition, setImagePosition,\n  userHazards, setUserHazards, draggableRef) => {\n\n  setImagePosition({\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n  });\n\n  var imag = draggableRef.current;\n  imag.position({\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n  });\n\n  let userHazardsUpdate = {\n    ...userHazards,\n    cones: userHazards.cones.map((eachImage, currentIdx) => {\n      if (currentIdx !== idx) {\n        return eachImage;\n      }\n      return {\n        x: e.target._lastPos.x,\n        y: e.target._lastPos.y,\n        width: 35,\n        height: 35,\n        idx: uuidv4()\n      }\n    })\n  }\n\n  setUserHazards(userHazardsUpdate);\n}\n\nconst TOOLBAR_CONE_DRAG = (\n  e, idx, imagePosition, setImagePosition,\n  userHazards, setUserHazards, draggableRef) => {\n\n  setImagePosition({\n    x: imagePosition.x,\n    y: imagePosition.y\n  });\n\n  var imag = draggableRef.current;\n  imag.position({\n    x: imagePosition.x,\n    y: imagePosition.y\n  });\n\n  let newImag = {\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n    width: 35,\n    height: 35,\n    idx: uuidv4()\n  }\n\n  let userHazardsUpdate = {\n    ...userHazards,\n    cones: [...userHazards.cones, newImag]\n  }\n\n  setUserHazards(userHazardsUpdate);\n}\n\nconst STANDARD_ROBOTARM_DRAG = (\n  e, idx, ImagePosition, setImagePosition,\n  userHazards, setUserHazards, draggableRef) => {\n\n  setImagePosition({\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n  });\n\n  var imag = draggableRef.current;\n  imag.position({\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n  });\n\n  let userHazardsUpdate = {\n    ...userHazards,\n    images: userHazards.robotarms.map((eachImage, currentIdx) => {\n      if (currentIdx !== idx) {\n        return eachImage;\n      }\n      return {\n        x: e.target._lastPos.x,\n        y: e.target._lastPos.y,\n        width: 35,\n        height: 35,\n        idx: uuidv4()\n      }\n    })\n  }\n}\n\nconst TOOLBAR_ROBOTARM_DRAG = (\n  e, idx, imagePosition, setImagePosition,\n  userHazards, setUserHazards, draggableRef) => {\n\n  setImagePosition({\n    x: imagePosition.x,\n    y: imagePosition.y\n  });\n\n  var imag = draggableRef.current;\n  imag.position({\n    x: imagePosition.x,\n    y: imagePosition.y\n  });\n\n  let newImag = {\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n    width: 35,\n    height: 35,\n    idx: uuidv4()\n  }\n\n  let userHazardsUpdate = {\n    ...userHazards,\n    robotarms: [...userHazards.robotarms, newImag]\n  }\n\n  setUserHazards(userHazardsUpdate);\n}\n\nconst TOOLBAR_CHEMICALBARREL_DRAG = (\n  e, idx, imagePosition, setImagePosition,\n  userHazards, setUserHazards, draggableRef) => {\n\n  setImagePosition({\n    x: imagePosition.x,\n    y: imagePosition.y\n  });\n\n  var imag = draggableRef.current;\n  imag.position({\n    x: imagePosition.x,\n    y: imagePosition.y\n  });\n\n  let newImag = {\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n    width: 35,\n    height: 35,\n    idx: uuidv4()\n  }\n\n  let userHazardsUpdate = {\n    ...userHazards,\n    chemicalBarrels: [...userHazards.chemicalBarrels, newImag]\n  }\n\n  setUserHazards(userHazardsUpdate);\n}\n\nconst STANDARD_CHEMICALBARREL_DRAG = (\n  e, idx, ImagePosition, setImagePosition,\n  userHazards, setUserHazards, draggableRef) => {\n\n  setImagePosition({\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n  });\n\n  var imag = draggableRef.current;\n  imag.position({\n    x: e.target._lastPos.x,\n    y: e.target._lastPos.y,\n  });\n\n  let userHazardsUpdate = {\n    ...userHazards,\n    images: userHazards.chemicalBarrels.map((eachImage, currentIdx) => {\n      if (currentIdx !== idx) {\n        return eachImage;\n      }\n      return {\n        x: e.target._lastPos.x,\n        y: e.target._lastPos.y,\n        width: 35,\n        height: 35,\n        idx: uuidv4()\n      }\n    })\n  }\n}\n\n// const STANDARD_IMAGE_DELETE = (e, idx, eachImg, userHazards, setUserHazards) => {\n//   console.log(idx);\n\n//   let userHazardsUpdate = {\n//     ...userHazards,\n//     images: userHazards.images.filter(images => {\n//       return images.idx !== idx;\n//     })\n//   }\n//   setUserHazards(userHazardsUpdate);\n// }\n\n\n//creating a functional component here of the Draggable Rectangle\n\nconst DraggableReferenceForklift = (props) => {\n\n  const [img] = useImage('https://www.tinyurl.com/9kv7w4bn');\n\n  const [imagePosition, setImagePosition] = useState(props.initialPosition);\n  const draggableRef = useRef(null);\n  const transformRef = useRef();\n\n  useEffect(() => {\n    if (props.isSelected) {\n      // -------------------------------\n      transformRef.current.nodes([draggableRef.current]);\n      console.log(transformRef.current.getLayer());\n      transformRef.current.getLayer().batchDraw();\n    }\n\n  }, [props.isSelected]);\n\n\n  return (\n    <>\n      <Image\n        onClick={props.onSelect}\n        onTap={props.onSelect}\n        ref={draggableRef}\n        {...props.shapeProps}\n        image={img}\n        ref={draggableRef}\n        x={imagePosition.x}\n        y={imagePosition.y}\n        width={30}\n        height={30}\n        draggable\n        onDragEnd={(e) => { props.onDragEnd(e, props.idx, imagePosition, setImagePosition, props.userHazards, props.setUserHazards, draggableRef) }}\n      />\n      {props.isSelected && (\n        <Transformer\n          ref={transformRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )\n      }\n    </>\n  )\n}\n\nconst DraggableReferenceTruck = (props) => {\n\n  const [img] = useImage('https://www.tinyurl.com/xldyo2za ');\n\n  const [imagePosition, setImagePosition] = useState(props.initialPosition);\n  const draggableRef = useRef(null);\n  const transformRef = useRef();\n\n  useEffect(() => {\n    if (props.isSelected) {\n      // -------------------------------\n      transformRef.current.nodes([draggableRef.current]);\n      console.log(transformRef.current.getLayer());\n      transformRef.current.getLayer().batchDraw();\n    }\n\n  }, [props.isSelected]);\n\n\n  return (\n    <>\n      <Image\n        onClick={props.onSelect}\n        onTap={props.onSelect}\n        ref={draggableRef}\n        {...props.shapeProps}\n        image={img}\n        ref={draggableRef}\n        x={imagePosition.x}\n        y={imagePosition.y}\n        width={30}\n        height={35}\n        draggable\n        onDragEnd={(e) => { props.onDragEnd(e, props.idx, imagePosition, setImagePosition, props.userHazards, props.setUserHazards, draggableRef) }}\n      />\n      {props.isSelected && (\n        <Transformer\n          ref={transformRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )\n      }\n    </>\n  )\n}\n\nconst DraggableReferenceCone = (props) => {\n\n\n  const [img] = useImage('https://www.tinyurl.com/57vtztcm');\n\n  const [imagePosition, setImagePosition] = useState(props.initialPosition);\n  const draggableRef = useRef(null);\n  const transformRef = useRef();\n\n  useEffect(() => {\n    if (props.isSelected) {\n      // -------------------------------\n      transformRef.current.nodes([draggableRef.current]);\n      console.log(transformRef.current.getLayer());\n      transformRef.current.getLayer().batchDraw();\n    }\n\n  }, [props.isSelected]);\n\n\n  return (\n    <>\n      <Image\n        onClick={props.onSelect}\n        onTap={props.onSelect}\n        ref={draggableRef}\n        {...props.shapeProps}\n        image={img}\n        ref={draggableRef}\n        x={imagePosition.x}\n        y={imagePosition.y}\n        width={30}\n        height={35}\n        draggable\n        onDragEnd={(e) => { props.onDragEnd(e, props.idx, imagePosition, setImagePosition, props.userHazards, props.setUserHazards, draggableRef) }}\n      />\n      {props.isSelected && (\n        <Transformer\n          ref={transformRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )\n      }\n    </>\n  )\n}\n\nconst DraggableReferenceRobotArm = (props) => {\n\n\n  const [img] = useImage('https://www.tinyurl.com/3bw6m6ow');\n\n  const [imagePosition, setImagePosition] = useState(props.initialPosition);\n  const draggableRef = useRef(null);\n  const transformRef = useRef();\n\n  useEffect(() => {\n    if (props.isSelected) {\n      // -------------------------------\n      transformRef.current.nodes([draggableRef.current]);\n      console.log(transformRef.current.getLayer());\n      transformRef.current.getLayer().batchDraw();\n    }\n\n  }, [props.isSelected]);\n\n  return (\n    <>\n      <Image\n        onClick={props.onSelect}\n        onTap={props.onSelect}\n        ref={draggableRef}\n        {...props.shapeProps}\n        image={img}\n        ref={draggableRef}\n        x={imagePosition.x}\n        y={imagePosition.y}\n        width={30}\n        height={35}\n        draggable\n        onDragEnd={(e) => { props.onDragEnd(e, props.idx, imagePosition, setImagePosition, props.userHazards, props.setUserHazards, draggableRef) }}\n      />\n      {props.isSelected && (\n        <Transformer\n          ref={transformRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )\n      }\n    </>\n  )\n}\n\nconst DraggableReferenceChemicalBarrel = (props) => {\n\n  const [img] = useImage('https://www.tinyurl.com/1kcyzbvw ');\n\n  const [imagePosition, setImagePosition] = useState(props.initialPosition);\n  const draggableRef = useRef(null);\n  const transformRef = useRef();\n\n  useEffect(() => {\n    if (props.isSelected) {\n      // -------------------------------\n      transformRef.current.nodes([draggableRef.current]);\n      console.log(transformRef.current.getLayer());\n      transformRef.current.getLayer().batchDraw();\n    }\n\n  }, [props.isSelected]);\n\n  return (\n    <>\n      <Image\n        onClick={props.onSelect}\n        onTap={props.onSelect}\n        ref={draggableRef}\n        {...props.shapeProps}\n        image={img}\n        ref={draggableRef}\n        x={imagePosition.x}\n        y={imagePosition.y}\n        width={25}\n        height={40}\n        draggable\n        onDragEnd={(e) => { props.onDragEnd(e, props.idx, imagePosition, setImagePosition, props.userHazards, props.setUserHazards, draggableRef) }}\n      />\n      {props.isSelected && (\n        <Transformer\n          ref={transformRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )\n      }\n    </>\n  )\n}\n\n\nconst ToolBar = (props) => {\n  // ---------------------------------------//creating a functional component of the Draggable Toolbar\n  const [toolbarAttributes, setToolbarAttributes] = useState(null);\n\n  const toolbarRef = useCallback(node => {\n    if (node !== null) {\n      setToolbarAttributes(node.attrs);\n    }\n  }, []);\n\n  return (\n    <Layer height={window.innerHeight} width={window.innerwidth}>\n      <Rect\n        ref={toolbarRef}\n        x={750}\n        y={65}\n        width={50}\n        height={50}\n        fill=\"white\"\n        cornerRadius={[10, 10, 10, 10]}\n      />\n\n<Rect\n        ref={toolbarRef}\n        x={750}\n        y={125}\n        width={50}\n        height={50}\n        fill=\"white\"\n        cornerRadius={[10, 10, 10, 10]}\n      />\n\n<Rect\n        ref={toolbarRef}\n        x={750}\n        y={185}\n        width={50}\n        height={50}\n        fill=\"white\"\n        cornerRadius={[10, 10, 10, 10]}\n      />\n\n<Rect\n        ref={toolbarRef}\n        x={750}\n        y={250}\n        width={50}\n        height={50}\n        fill=\"white\"\n        cornerRadius={[10, 10, 10, 10]}\n      />\n\n\n<Rect\n        ref={toolbarRef}\n        x={750}\n        y={310}\n        width={50}\n        height={50}\n        fill=\"white\"\n        cornerRadius={[10, 10, 10, 10]}\n      />\n\n\n      <DraggableReferenceForklift\n        draggable\n        key={`TOOLBAR_FORKLIFT`}\n        x={18}\n        y={window.innerHeight / 2 + 30}\n        width={35}\n        height={30}\n        setUserHazards={props.setUserHazards}\n        userHazards={props.userHazards}\n        onDragEnd={TOOLBAR_FORKLIFT_DRAG}\n        initialPosition={{ x: 760, y: 75}}\n      />\n\n      <DraggableReferenceTruck\n        draggable\n        key={`TOOLBAR_TRUCK`}\n        x={18}\n        y={window.innerHeight / 2 + 30}\n        width={35}\n        height={35}\n        setUserHazards={props.setUserHazards}\n        userHazards={props.userHazards}\n        onDragEnd={TOOLBAR_TRUCK_DRAG}\n        initialPosition={{ x: 760, y: 130 }}\n      />\n\n      <DraggableReferenceCone\n        draggable\n        key={`TOOLBAR_CONE`}\n        x={18}\n        y={window.innerHeight / 2 + 30}\n        width={35}\n        height={35}\n        setUserHazards={props.setUserHazards}\n        userHazards={props.userHazards}\n        onDragEnd={TOOLBAR_CONE_DRAG}\n        initialPosition={{ x: 760, y: 190 }}\n      />\n\n      <DraggableReferenceRobotArm\n        draggable\n        key={`TOOLBAR_ROBOTARM`}\n        x={18}\n        y={window.innerHeight / 2 + 30}\n        width={35}\n        height={35}\n        setUserHazards={props.setUserHazards}\n        userHazards={props.userHazards}\n        onDragEnd={TOOLBAR_ROBOTARM_DRAG}\n        initialPosition={{ x: 760, y: 255}}\n      />\n\n\n      <DraggableReferenceChemicalBarrel\n        draggable\n        key={`TOOLBAR_CHEMICALBARREL`}\n        x={18}\n        y={window.innerHeight / 2 + 30}\n        width={25}\n        height={40}\n        setUserHazards={props.setUserHazards}\n        userHazards={props.userHazards}\n        onDragEnd={TOOLBAR_CHEMICALBARREL_DRAG}\n        initialPosition={{ x: 762, y: 315}}\n      />\n\n    </Layer>\n  )\n}\n\nconst Canvas = () => {\n\n  const [userHazards, setUserHazards] = useState({\n    rectangles: [], ellipses: [], cones: [], robotarms: [], chemicalBarrels: [], trucks: [],\n    forklifts: [],\n  });\n  const [selectedId, selectShape] = useState(null);\n  const [cross] = useImage(\"https://i.dlpng.com/static/png/6502802_preview.png\");\n  const [crossPosition, setCrossPosition] = useState()\n\n  const siteRef = useRef();\n\n  const checkDeselect = (e) => {\n    // deselect when clicked on empty area\n    const clickedOnStage = e.target === e.target.getStage();\n    if (clickedOnStage) {\n      selectShape(null);\n      console.log(selectShape);\n    }\n  };\n\n  console.log(`SELECTED SHAPE: ${selectedId}`)\n\n  return (\n    //creates background stage (like canvas)\n    <Stage\n      width={850}\n      height={600}\n      onMouseDown={checkDeselect}\n      onTouchStart={checkDeselect}\n    >\n    <Layer>\n        <URLImage \n          x={0}\n          y={0}\n          width={700}\n          height={500}\n          onClick={(e) => {selectShape(null);}}\n        />\n      </Layer>\n\n      <Layer>\n\n        {userHazards.forklifts.map((eachImg, idx) => (\n          <DraggableReferenceForklift\n            key={`USER_IMG_${eachImg.idx}`}\n            idx={eachImg.idx}\n            setUserHazards={setUserHazards}\n            userHazards={userHazards}\n            onDragEnd={STANDARD_FORKLIFT_DRAG}\n            initialPosition={{ x: eachImg.x, y: eachImg.y }}\n            isSelected={eachImg.idx === selectedId}\n            onSelect={() => {\n              selectShape(eachImg.idx);\n            }}\n            onChange={(newAttrs) => {\n              const fork = userHazards.forklifts.slice();\n              fork[eachImg.idx] = newAttrs;\n              setUserHazards(fork);\n            }}\n          />\n        )\n        )}\n\n        {userHazards.trucks.map((eachImg, idx) => (\n          <>\n            <DraggableReferenceTruck\n              key={`USER_IMG_${eachImg.idx}`}\n              idx={eachImg.idx}\n              setUserHazards={setUserHazards}\n              userHazards={userHazards}\n              onDragEnd={STANDARD_TRUCK_DRAG}\n              initialPosition={{ x: eachImg.x, y: eachImg.y }}\n              isSelected={eachImg.idx === selectedId}\n              onSelect={() => {\n                selectShape(eachImg.idx);\n              }}\n              onChange={(newAttrs) => {\n                const truck = userHazards.trucks.slice();\n                truck[eachImg.idx] = newAttrs;\n                setUserHazards(truck);\n              }}\n            />\n\n            {/* <Image\n                  image={cross}\n                  idx={eachRect.idx}\n                  crossPosition={crossPosition}\n                  setCrossPosition={crossPosition}\n                  setUserHazards={setUserHazards}\n                  userHazards={userHazards}\n                  x={eachRect.x + 30}\n                  y={eachRect.y - 10}\n                  width={20}\n                  height={20}\n              /> */}\n          </>\n        )\n        )}\n\n        {userHazards.cones.map((eachImg, idx) => (\n          <DraggableReferenceCone\n            key={`USER_IMG_${eachImg.idx}`}\n            idx={eachImg.idx}\n            setUserHazards={setUserHazards}\n            userHazards={userHazards}\n            onDragEnd={STANDARD_CONE_DRAG}\n            initialPosition={{ x: eachImg.x, y: eachImg.y }}\n            isSelected={eachImg.idx === selectedId}\n            onSelect={() => {\n              selectShape(eachImg.idx);\n            }}\n            onChange={(newAttrs) => {\n              const cones = userHazards.cones.slice();\n              cones[eachImg.idx] = newAttrs;\n              setUserHazards(cones);\n            }}\n          />\n        )\n        )}\n\n        {userHazards.robotarms.map((eachImg, idx) => (\n          <DraggableReferenceRobotArm\n            key={`USER_IMG_${eachImg.idx}`}\n            idx={eachImg.idx}\n            setUserHazards={setUserHazards}\n            userHazards={userHazards}\n            onDragEnd={STANDARD_ROBOTARM_DRAG}\n            initialPosition={{ x: eachImg.x, y: eachImg.y }}\n            isSelected={eachImg.idx === selectedId}\n            onSelect={() => {\n              selectShape(eachImg.idx);\n            }}\n            onChange={(newAttrs) => {\n              const rb = userHazards.robotarms.slice();\n              rb[eachImg.idx] = newAttrs;\n              setUserHazards(rb);\n            }}\n          />\n        )\n        )}\n\n        {userHazards.chemicalBarrels.map((eachImg, idx) => (\n          <DraggableReferenceChemicalBarrel\n            key={`USER_IMG_${eachImg.idx}`}\n            idx={eachImg.idx}\n            setUserHazards={setUserHazards}\n            userHazards={userHazards}\n            onDragEnd={STANDARD_CHEMICALBARREL_DRAG}\n            initialPosition={{ x: eachImg.x, y: eachImg.y }}\n            isSelected={eachImg.idx === selectedId}\n            onSelect={() => {\n              selectShape(eachImg.idx);\n            }}\n            onChange={(newAttrs) => {\n              const cb = userHazards.chemicalBarrels.slice();\n              cb[eachImg.idx] = newAttrs;\n              setUserHazards(cb);\n            }}\n          />\n        )\n        )}\n\n      </Layer>\n      {/* Making toolbar draggable */}\n      <ToolBar\n        setUserHazards={setUserHazards}\n        userHazards={userHazards}\n      />\n\n    </Stage >\n  );\n}\n\n\nexport default Canvas;","C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\GuideDownload\\GuideDownload.js",["160","161","162","163","164"],"C:\\Users\\denbyoliv\\Desktop\\masterbranch\\trafficmanagementproject\\frontend\\src\\Components\\HazardAllocation\\HazardDrop.js",["165","166","167"],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":12},{"ruleId":"172","severity":1,"message":"176","line":5,"column":42,"nodeType":"174","messageId":"175","endLine":5,"endColumn":47},{"ruleId":"172","severity":1,"message":"177","line":5,"column":49,"nodeType":"174","messageId":"175","endLine":5,"endColumn":53},{"ruleId":"172","severity":1,"message":"178","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":33},{"ruleId":"172","severity":1,"message":"179","line":14,"column":8,"nodeType":"174","messageId":"175","endLine":14,"endColumn":25},{"ruleId":"172","severity":1,"message":"180","line":18,"column":8,"nodeType":"174","messageId":"175","endLine":18,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":87,"column":9,"nodeType":"183","messageId":"184","endLine":245,"endColumn":10},{"ruleId":"172","severity":1,"message":"185","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":15},{"ruleId":"172","severity":1,"message":"186","line":2,"column":17,"nodeType":"174","messageId":"175","endLine":2,"endColumn":23},{"ruleId":"172","severity":1,"message":"187","line":2,"column":25,"nodeType":"174","messageId":"175","endLine":2,"endColumn":34},{"ruleId":"172","severity":1,"message":"188","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"189","line":2,"column":16,"nodeType":"174","messageId":"175","endLine":2,"endColumn":22},{"ruleId":"172","severity":1,"message":"190","line":4,"column":11,"nodeType":"191","messageId":"175","endLine":4,"endColumn":17},{"ruleId":"172","severity":1,"message":"192","line":5,"column":5,"nodeType":"174","messageId":"175","endLine":5,"endColumn":16},{"ruleId":"172","severity":1,"message":"193","line":8,"column":12,"nodeType":"174","messageId":"175","endLine":8,"endColumn":25},{"ruleId":"172","severity":1,"message":"194","line":8,"column":27,"nodeType":"174","messageId":"175","endLine":8,"endColumn":43},{"ruleId":"172","severity":1,"message":"195","line":9,"column":12,"nodeType":"174","messageId":"175","endLine":9,"endColumn":29},{"ruleId":"172","severity":1,"message":"196","line":9,"column":31,"nodeType":"174","messageId":"175","endLine":9,"endColumn":51},{"ruleId":"172","severity":1,"message":"197","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":13},{"ruleId":"172","severity":1,"message":"198","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":24},{"ruleId":"172","severity":1,"message":"199","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":16},{"ruleId":"172","severity":1,"message":"177","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":14},{"ruleId":"172","severity":1,"message":"200","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":21},{"ruleId":"172","severity":1,"message":"189","line":7,"column":10,"nodeType":"174","messageId":"175","endLine":7,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":56,"column":40,"nodeType":"203","endLine":56,"endColumn":52},{"ruleId":"172","severity":1,"message":"177","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":14},{"ruleId":"172","severity":1,"message":"204","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":18},{"ruleId":"172","severity":1,"message":"205","line":19,"column":13,"nodeType":"174","messageId":"175","endLine":19,"endColumn":19},{"ruleId":"172","severity":1,"message":"206","line":19,"column":21,"nodeType":"174","messageId":"175","endLine":19,"endColumn":33},{"ruleId":"172","severity":1,"message":"207","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":18},{"ruleId":"172","severity":1,"message":"208","line":94,"column":15,"nodeType":"174","messageId":"175","endLine":94,"endColumn":18},{"ruleId":"172","severity":1,"message":"185","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":15},{"ruleId":"172","severity":1,"message":"209","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":16},{"ruleId":"172","severity":1,"message":"210","line":114,"column":13,"nodeType":"174","messageId":"175","endLine":114,"endColumn":25},{"ruleId":"172","severity":1,"message":"211","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"212","line":1,"column":28,"nodeType":"174","messageId":"175","endLine":1,"endColumn":37},{"ruleId":"172","severity":1,"message":"213","line":2,"column":30,"nodeType":"174","messageId":"175","endLine":2,"endColumn":34},{"ruleId":"172","severity":1,"message":"214","line":2,"column":36,"nodeType":"174","messageId":"175","endLine":2,"endColumn":43},{"ruleId":"172","severity":1,"message":"215","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":13},{"ruleId":"172","severity":1,"message":"216","line":6,"column":10,"nodeType":"174","messageId":"175","endLine":6,"endColumn":16},{"ruleId":"172","severity":1,"message":"217","line":286,"column":7,"nodeType":"174","messageId":"175","endLine":286,"endColumn":24},{"ruleId":"172","severity":1,"message":"217","line":380,"column":7,"nodeType":"174","messageId":"175","endLine":380,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":439,"column":9,"nodeType":"220","endLine":439,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":491,"column":9,"nodeType":"220","endLine":491,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":544,"column":9,"nodeType":"220","endLine":544,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":596,"column":9,"nodeType":"220","endLine":596,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":647,"column":9,"nodeType":"220","endLine":647,"endColumn":27},{"ruleId":"172","severity":1,"message":"221","line":675,"column":10,"nodeType":"174","messageId":"175","endLine":675,"endColumn":27},{"ruleId":"172","severity":1,"message":"222","line":814,"column":10,"nodeType":"174","messageId":"175","endLine":814,"endColumn":15},{"ruleId":"172","severity":1,"message":"223","line":815,"column":10,"nodeType":"174","messageId":"175","endLine":815,"endColumn":23},{"ruleId":"172","severity":1,"message":"224","line":815,"column":25,"nodeType":"174","messageId":"175","endLine":815,"endColumn":41},{"ruleId":"172","severity":1,"message":"225","line":817,"column":9,"nodeType":"174","messageId":"175","endLine":817,"endColumn":16},{"ruleId":"172","severity":1,"message":"226","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":12},{"ruleId":"172","severity":1,"message":"227","line":7,"column":8,"nodeType":"174","messageId":"175","endLine":7,"endColumn":16},{"ruleId":"172","severity":1,"message":"205","line":21,"column":13,"nodeType":"174","messageId":"175","endLine":21,"endColumn":19},{"ruleId":"172","severity":1,"message":"206","line":21,"column":21,"nodeType":"174","messageId":"175","endLine":21,"endColumn":33},{"ruleId":"228","severity":1,"message":"229","line":38,"column":91,"nodeType":"203","endLine":38,"endColumn":132},{"ruleId":"230","severity":1,"message":"231","line":7,"column":5,"nodeType":"232","messageId":"233","endLine":9,"endColumn":6},{"ruleId":"172","severity":1,"message":"205","line":32,"column":17,"nodeType":"174","messageId":"175","endLine":32,"endColumn":23},{"ruleId":"172","severity":1,"message":"206","line":32,"column":25,"nodeType":"174","messageId":"175","endLine":32,"endColumn":37},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'createGenerateClassName' is defined but never used.","'SiteDrawingLayout' is defined but never used.","'TestTest' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'SiteImg' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'google' is defined but never used.","Program","'markerArray' is assigned a value but never used.","'buttonTextMac' is assigned a value but never used.","'setButtonTextMac' is assigned a value but never used.","'buttonTextWindows' is assigned a value but never used.","'setButtonTextWindows' is assigned a value but never used.","'Map' is defined but never used.","'StylesProvider' is defined but never used.","'ReactDOM' is defined but never used.","'SiteSelection' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Checkbox' is defined but never used.","'values' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'HazardList' is defined but never used.","'haz' is assigned a value but never used.","'mapImage' is defined but never used.","'sketch_style' is assigned a value but never used.","'Component' is defined but never used.","'createRef' is defined but never used.","'Text' is defined but never used.","'Ellipse' is defined but never used.","'Konva' is defined but never used.","'FaSave' is defined but never used.","'userHazardsUpdate' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'toolbarAttributes' is assigned a value but never used.","'cross' is assigned a value but never used.","'crossPosition' is assigned a value but never used.","'setCrossPosition' is assigned a value but never used.","'siteRef' is assigned a value but never used.","'Logo' is defined but never used.","'Download' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]